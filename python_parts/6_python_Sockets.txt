*****************************************
  SOCKETS   python			*
*****************************************
"""
Socket logiciel
Interface de communication au dessus du 
réseau.



TCP
UDP

"""
-----------server.py----------------------
#coding:utf-8
import socket

host, port = ('', 5566)

socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
socket.bind((host, port))
print("Le serveur est démarré...")

while True:
  socket.listen()	
  conn, address = socket.accept()
  print("En écoute...")

  data = conn.recv(1024)
  data = data.decode("utf8")
  print(data)

conn.close()
socket.close()


-----------client.py----------------------
#coding:utf-8
import socket

host, port = ('localhost', 5566)
socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
   socket.connect((host, port))
   print("Client connecté !")

   data = "Bonjour je suis le client"
   data = data.encode("utf8")
   socket.sendall(data)

except ConnectionRefusedError:
   print("connection échouée!")
finally:
   socket.close()


---------------Connection multiple avec les threads au niveau du serveur-------------------------
#coding:utf-8
import socket
import threading

class ThreadForClient(threading.Thread):
	def __init__(self, conn):
	  threading.Thread.__init__(self)
	  self.conn = conn

	def run(self):
	  data = self.conn.recv(1024)
 	  data = data.decode("utf8")
	  print(data)
#---------------------------------------------
host, port = ('', 5566)

socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
socket.bind((host, port))
print("Le serveur est démarré...")

while True:
  socket.listen()	
  conn, address = socket.accept()
  print("Un client vient de se connecter...")

  my_thread = ThreadForClient(conn)
  my_thread.start()

conn.close()
socket.close()














































