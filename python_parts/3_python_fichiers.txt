*************************************************************************************************
    Fichier en Python										*
*************************************************************************************************
"""
Modes d'ouverture: 	r (lecture seule)
			w (écriture avec remplacement)
			a (écriture avec ajout en fin de fichier)
			x (lecture et écriture)
			r+ (lecture/écriture dans un même fichier)
			wb (écriture en mode binaire)

#Lecture
fic.read() #lit tout le fichier
fic.readline() #lit une seule ligne
fic.readlines() #récupère toutes les autres lignes si on lit avant d'autre ligne
		#récupère sous forme de liste tout le contenu
tout récupération c'est en chaine de caractère classe str. donc pas de calcul il faut caster

#Ecriture
fic.write()





"""

#Ouverture et Lecture
fic = open("docs/donnees.txt", "r")

content = fic.read()
print(content) #lit tout le fichier (pas d'accent)

fic.close()

#gestion de l'ouverture ou avec un try exception
if fic.closed:
   print("Fichier fermé")
else:
   print("Fichier encore ouvert")


#ouvrir et vérifier l'ouverture et plus besoin de le fermer
with open("docs/donnees.txt", "r") as fic:
   content = fic.read()
   print(content)
  

#Ecriture 
with open("docs/donnees.txt", "w") as fic:
   	nombre = 15
	fic.write(str(nombre))
	fic.write("Bonjour")
        fic.write("\n Monsieur ...")





*************************************************************************************************
    Sauvegarder un joueur en binaire								*
*************************************************************************************************
import pickle

class Player:
	def __init__(self, name, level):
		self.name=name
		self.level=level

	def whoami(self):
		print("{} ({})".format(self.name, self.level))

p1 = Player("toto", 10)   #fichier de 60 octets

#sauvegarde
with open("player.data", "wb") as fic: 
	record = pickle.Pickler(fic)
	record.dump(p1)

#récupération du fichier
with open("player.data", "rb") as fic: 
	get_record = pickle.Unpickler(fic)
	player_one = get_record.load()

player_one.whoami()

















*************************************************************************************************
    Gestion répertoire et dossier et fichier								*
*************************************************************************************************
import os  ##module de dialogue avec le système d'exploitation     
chdir("/home/christophe/monfichiers") #chdir change dir
nom_repertoire_courant = os.getcwd()
-------------------------------------------------------------------
Ecriture séquentiel dans un fichier
------------------------------------
obFichier = open('monfichiers', 'a') #crée objet fichier
obFichier.write('Bonjour, fihcier!')
obFichier.write('commen ça va ?')
obFichier.close()

Lecture séquentiel dans un fichier
------------------------------------
ofi = open('monfichiers', 'r') 
t = ofi.read(7) #7 indique combien de caractères doivent êtres lus
print(t) 
ofi.close()

readline() lit une seule ligne renvoie une chaîne de caractère
readlines() lit l'intégralité d'un fichier en une instruction renvoie une liste 

Copie de fichier en pas de  50 caractères
------------------------------------------
def copieFichier(source, destination):
  "copie intégrale d'un fichier"
  fs = open(source, 'r')
  fd = open(destination, 'w')
  while 1:
    txt = fs.read(50)
    if txt =="":
       break
    fd.write(txt)
  fs.close()
  fd.close()
  return
 
 Traitement sur les fichiers ça commence comme ça 
 ------------------------------------------------
 recopier un fichier texte en omettant toutes les lignes qui commencent par #
 --------------------------------------------------------------------------------
def filtre(source,destination):
   "recopier un fichier en éliminant les lignes de remarques"
   fs = open(source, 'r')
   fd = open(destination, 'w')
   while 1:
      txt = fs.readline()
      if txt =='':
         break
      if txt[0] != '#':
         fd.write(txt)
   fs.close()
   fd.close()
   return

Nous ne pouvons pas enregistrer d'autres types de valeurs qu'en transformant en chaîne de caractère.
x = 52
f.write(str(x))
si nous enregistrons en valeurs numériques en les transformant en chaine de caractère,
nous risquons de ne plus pourvoir les retransformer correctement en valeurs numériques lorsque nous allons relire le fichier
a=5, b=2.63, c=67
f.write(str(a)) #b, c
print(f.read()) => 52.8367

avec pickle  (conserver) mais ce seront des fichiers binaires
import pickle
pickle.dump(a,f) ...
j = pickle.load(f)



------------------------------------------
Souvent nous avons des fichiers binaires décodé par un logiciel spécifique:
images, sons, vidéos ...

  
  

















